# Generated by cue/workflows_tool.cue; do not edit
name: Python code quality checks
"on":
  push:
    branches:
      - master
    paths:
      - '**.py'
      - pyproject.toml
      - poetry.lock
  workflow_dispatch: null
jobs:
  lint:
    name: Lint and check the Python project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Install Poetry
        uses: snok/install-poetry@2bf112a0f6979928eb6b011f39700db589c5961e
        with:
          version: 1.2.0rc2
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - id: setup-python
        name: Setup Python
        uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5
        with:
          python-version: 3.10.6
      - id: cache-deps
        name: Cache
        uses: actions/cache@fd5de65bc895cf536527842281bea11763fefd77
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - if: steps.cache-deps.outputs.cache-hit != 'true'
        name: Install dev dependencies (if not in cache)
        run: poetry install --only dev
      - name: Check formatting with Black
        run: poetry run black --check ./humiocli
      - name: Check code with Pylint
        run: poetry run pylint --disable=all --enable=import-self,pointless-statement,consider-using-f-string ./humiocli
permissions:
  contents: read
